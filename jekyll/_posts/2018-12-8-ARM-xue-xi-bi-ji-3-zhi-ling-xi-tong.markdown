---
layout: post
title: ARM学习笔记3——指令系统
date: 2018-12-08 15:25:30 +0800
categories: 硬件 技术
issue_id: 44
---
若无特别说明，说的是arm指令集（32位）

#### 编码格式

    <opcode> {<cond>} {S} <Rd>,<Rn>,<shifter_operand>

- opcode助记符
- cond条件
- Rd目标寄存器
- Rn包含第一个源操作数的寄存器
- shifter_operand第二个源操作数
- S决定指令执行完是否影响CPSR
- `<>中为必须，{}中为可选项`

### 寻址方式
#### 立即数寻址
立即数的位数有12位，但直接表示立即数的只有8位，剩下高四位表示循环右移。
当立即数小于256，直接使用8位即可。但如果立即数高于256，就要移位，只有符合低8位循环右移（2*高四位）的数才是合法立即数

#### 寄存器寻址
`ADD R0,R1,R2`
#### 寄存器移位寻址
`MOV R0,R2,LSL #3`
`ANDS R1,R1,R2,LSL R3`
#### 寄存器间接寻址
`LDR R1,[R2]`
#### 寄存器变址寻址
`LDR R1,[R2,#4]`     R1=[R2+4]
`LDR R1,[R2,#4]!`    R1=[R2+4],R2+=4
`LDR R1,[R2],#4`     R1=[R2],R2+=4
`LDR R1,[R2,R3]`     R1=[R2+R3]
#### 多寄存器寻址
`LDMIA R0,{R1,R2,R3,R4}`
R1=[R0],R2=[R0+4]...
#### 相对寻址
`BL NEXT`   (跳转）
#### 堆栈寻址
